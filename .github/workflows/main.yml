name: CI/CD Pipeline

on:
  push:
    branches: [ main ]

jobs:

  continuous-integration:
    runs-on: ubuntu-latest

    steps:
      # Step 1      
      - uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2

      - name: Setup Cloud Formation Linter with Latest Version
        uses: scottbrenner/cfn-lint-action@v2

      - name: Print the Cloud Formation Linter Version & run Linter.
        run: |
          cfn-lint --version
          cfn-lint -t ./deployment/cvt-template.yaml
      
      # Step 2
      - name: Set up Python 
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
          architecture: x64
      # Step 3
      - name: Install Python Virtual ENV
        run: pip3 install virtualenv
      # Step 4
      - name: Activate and Install Depencies into Virtual env
        run: |
          mkdir dist && cp ./src/* ./dist
          cd ./src
          python -m pip install --upgrade pip
          python -m venv venv && source venv/bin/activate 
          pip3 install -r requirements.txt --target ../dist/
        if: steps.cache-venv.outputs.cache-hit != 'true'
      # Step 5
      - name: zip the distribution
        run: |
          mkdir build
          cd ./dist &&  zip ../build/app.zip -r .
      # Step 6
      - name: Upload zip file artifact
        uses: actions/upload-artifact@v2
        with:
          name: app
          path: build/app.zip
      # Step 7
      - name: Push Zip to S3
        uses: zdurham/s3-upload-github-action@master
        with:
          args: --acl public-read
        env:
          FILE: build/app.zip
          AWS_REGION: 'us-east-2'
          S3_BUCKET:  'cvt-iot-250'
          S3_KEY: 'dist/'
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      # Step 8
      - name: Deploy to AWS CloudFormation
        uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: CVT-IoT-dev
          template: ./deployment/cvt-template.yaml
          no-fail-on-empty-changeset: "1"
          # parameter-overrides: "MyParam1=myValue,MyParam2=${{ secrets.MY_SECRET_VALUE }}"

